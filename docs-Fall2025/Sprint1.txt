# 🏃 Sprint 1 — Team Role Breakdown

Sprint Goal: Deliver a working prototype web app that displays the GGC campus map 
with clickable/highlightable buildings, while establishing project infrastructure, 
documentation, and testing foundation.

---

## 👨‍💻 Brendan — Lead Programmer / Architect (60%) | Programmer (20%)
Focus: Core Code Architecture
- Set up GitHub repository with branch structure and README.
- Build initial Java project skeleton (backend + web integration).
- Implement Map module to load and display the campus SVG.
- Add basic interactivity so that buildings highlight when clicked or hovered.
- Draft UML Class Diagram outlining modules (Map, Building, User Interaction).

Deliverables:
- GitHub repo with project skeleton.
- Campus map displayed with interactive building highlights.
- UML diagram draft.

---

## 📊 Will — Data Modeling Lead (60%) | Documentation Lead (20%) | Programmer (20%)
Focus: Data Structure & Documentation
- Draft ERD (Entity Relationship Diagram) for storing building information.
- Define a mock dataset for 5–10 buildings (ID, name, description).
- Link building dataset entries to SVG building IDs.
- Begin documentation for schema and project overview.

Deliverables:
- ERD (draft).
- Mock dataset file linked to SVG elements.
- Documentation draft.

---

## 🧪 Karen — Testing Lead (60%) | Client Liaison (20%) | Programmer (20%)
Focus: Quality & Requirements
- Draft testing strategy (unit testing in JUnit, system testing later).
- Write unit test stubs for the map interactivity feature.
- Contact Dr. Gunay to confirm:
  - Expected level of detail (buildings vs. rooms).
  - Platform scope (web only or future mobile app).
  - Preferred tech stack.
- Share notes with the team for alignment.

Deliverables:
- Draft test plan.
- Unit tests in repo.
- Requirement confirmation notes.

---

## 🎨 Justin — UI/UX Designer (60%) | Project Manager (20%) | Programmer (20%)
Focus: User Experience & Sprint Tracking
- Create wireframes for:
  - Home screen.
  - Map view with selectable/highlightable buildings.
- Draft user stories (e.g., “As a student, I want to click a building to see its 
  name, so I can confirm where I’m going”).
- Set up Trello/Jira board with Sprint 1 tasks (To Do → In Progress → Done).
- Ensure tasks are updated and blockers tracked throughout the sprint.

Deliverables:
- Wireframes for main views.
- User stories backlog.
- Active Scrum board shared with team.

---

## 📌 Sprint 1 Deliverables (Whole Team)
✅ GitHub repo + base project structure
✅ Campus SVG map rendered with clickable/highlightable buildings
✅ ERD + mock building dataset
✅ Wireframes + user stories backlog
✅ Draft testing plan + unit tests
✅ Requirements confirmation notes from client


---

# 🏃 Sprint 1 — Deliverable Dependencies

## 👨‍💻 Brendan — Lead Programmer / Architect
- Depends on Will: Needs mock building dataset + SVG IDs linked to dataset to display building info.
- Depends on Karen: Needs basic test plan ready so his Map module can be validated.
- Depends on Justin: Needs wireframes to align UI interactions with technical implementation.

## 📊 Will — Data Modeling Lead
- Depends on Brendan: Needs repo/project structure to integrate mock dataset.
- Depends on Justin: Needs wireframes/user stories to understand what building data is required.
- Depends on Karen: Will use her notes from Dr. Gunay to refine data schema (e.g., buildings only vs. rooms).

## 🧪 Karen — Testing Lead / Client Liaison
- Depends on Brendan: Needs initial Map module functions to write test stubs.
- Depends on Will: Needs schema + dataset to test data integration later.
- Depends on Justin: Needs user stories to ensure test plan covers correct scenarios.

## 🎨 Justin — UI/UX Designer / Project Manager
- Depends on Karen: Needs requirements confirmation from Dr. Gunay to design wireframes properly.
- Depends on Brendan: Needs assurance that interactivity planned in wireframes is feasible in Sprint 1.
- Depends on Will: Needs mock dataset fields to design how info is displayed when a building is clicked.

---

## 📌 Summary of Key Dependencies
- Karen → Everyone: Requirements notes will shape data, design, and testing.
- Will → Brendan: Brendan can’t fully link interactivity without Will’s dataset.
- Justin → Karen: Wireframes depend on clarified requirements.
- Brendan ↔ Justin: Must coordinate on interactivity design vs. implementation.
